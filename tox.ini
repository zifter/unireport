[tox]
skip_install = True
isolated_build = True
envlist =
    isort-check
    black-check
    flake8-check
    pylint-check
    py{38,39,310,311}
    coverage-report
    clean
skip_missing_interpreters = True
basepython=py311

[testenv]
deps =
    -r requirements-test.txt
commands = pytest src \
           --cov-append \
           --cov=src/ \
           --cov-config="{toxinidir}/tox.ini"

[testenv:flake8-check]
deps = flake8==6.1.0
commands = flake8 --config={toxinidir}/tox.ini src/

[testenv:pylint-check]
deps =
    {[testenv]deps}
    pylint==2.17.5
commands = pylint src/tests/ --rcfile={toxinidir}/tox.ini
    pylint src/unireport/ --rcfile={toxinidir}/tox.ini

[testenv:isort]
changedir = {toxinidir}/src
deps = isort==5.12.0
commands = isort . -sp={toxinidir}/tox.ini

[testenv:isort-check]
changedir = {toxinidir}/src
deps = isort==5.10.1
commands = isort . --check-only -sp={toxinidir}/tox.ini

[testenv:black]
changedir = {toxinidir}/src
deps = black==23.9.1
commands = black .

[testenv:black-check]
changedir = {toxinidir}/src
deps = black==23.9.1
commands = black --check .

[testenv:coverage-report]
deps =
    coverage==7.3.1
commands =
  coverage html
  coverage report --include="src/unireport/*" --fail-under=99 -m
  coverage report --include="src/tests/*" --fail-under=100 -m
  coverage xml

[testenv:gen_docs]
deps = -r docs/requirements.txt
commands =
    sphinx-build -b html docs/source/ docs/build/

[testenv:build_wheel]
deps =
    wheel
    docutils
    pygments
commands =
    python -c "import shutil; import os; [shutil.rmtree(os.path.join(os.getcwd(), p), ignore_errors=True) for p in ['build', 'dist']];"
    python setup.py sdist bdist_wheel

[testenv:test_upload]
deps =
    twine
commands =
    python -m twine upload --verbose --repository-url https://test.pypi.org/legacy/ dist/*

[testenv:test_venv]
skip_install = True
deps =
commands =
    pip install --extra-index-url https://pypi.org/simple -i https://test.pypi.org/simple/ unireport

[testenv:pypi_upload]
passenv = TWINE_USERNAME, TWINE_PASSWORD
deps =
    twine
commands =
    python -m twine upload dist/*

[testenv:pypi_venv]
skip_install = True
deps =
commands =
    pip install unireport

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

########
# pylint
[pylint.main]
max-line-length=120
# C0114: Missing module docstring
# C0116: Missing function or method docstring
# R0903: Too few public methods
disable=fixme, invalid-name, R0801, W0621, C0116, C0114, R0913, C0115, R0903


[flake8]
max-line-length=120
ignore=E203,E231,W503

[isort]
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=88
